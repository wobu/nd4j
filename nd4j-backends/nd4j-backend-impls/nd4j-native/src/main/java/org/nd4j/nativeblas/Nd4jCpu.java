// Targeted by JavaCPP version 1.3.1: DO NOT EDIT THIS FILE

package org.nd4j.nativeblas;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

public class Nd4jCpu extends org.nd4j.nativeblas.Nd4jCpuPresets {
    static { Loader.load(); }

// Parsed from NativeOps.h

//
// Created by agibsonccc on 2/21/16.
//

// #ifndef NATIVEOPERATIONS_NATIVEOPS_H
// #define NATIVEOPERATIONS_NATIVEOPS_H

// #ifndef thread_local
// # if __STDC_VERSION__ >= 201112 && !defined __STDC_NO_THREADS__
// #  define thread_local _Thread_local
// # elif defined _WIN32 && (
//        defined _MSC_VER ||
//        defined __ICL ||
//        defined __DMC__ ||
//        defined __BORLANDC__ )
// #  define thread_local __declspec(thread)
/* note that ICC (linux) and Clang are covered by __GNUC__ */
// # elif defined __GNUC__ ||
//        defined __SUNPRO_C ||
//        defined __xlC__
// #  define thread_local __thread
// # else
// #  error "Cannot define thread_local"
// # endif
// #endif

// #include <pointercast.h>
// #include <types/float16.h>

//DO NOT REMOVE: THIS IS AN EDITOR SEMANTICS THING FOR CLION
//IT DEFINES THE EXPORT MACRO FOR THE EDITOR AND THEN
//RE ADDS THE DEFINITION VIA dll.h
// #ifdef  _WIN32
// #define ND4J_EXPORT __declspec(dllexport)
// #else
// #define ND4J_EXPORT
// #endif
// #include <dll.h>

public static class NativeOps extends org.nd4j.nativeblas.NativeOps {
    static { Loader.load(); }
    /** Default native constructor. */
    public NativeOps() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public NativeOps(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public NativeOps(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public NativeOps position(long position) {
        return (NativeOps)super.position(position);
    }



    public native void setElementThreshold(int num);

    public native void setTADThreshold(int num);

    /**
       *
       * @param opNum
       * @param x
       * @param xShapeInfo
       * @param extraParams
       */
    public native double execIndexReduceScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                             DoublePointer x,
                                             IntPointer xInfo,
                                             DoublePointer extraParams);
    public native double execIndexReduceScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                             DoubleBuffer x,
                                             IntBuffer xInfo,
                                             DoubleBuffer extraParams);
    public native double execIndexReduceScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                             double[] x,
                                             int[] xInfo,
                                             double[] extraParams);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @param result
     * @param resultShapeInfoBuffer
     * @param dimension
     * @param dimensionLength
     */
    public native void execIndexReduceDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                     DoublePointer x,
                                     IntPointer xInfo,
                                     DoublePointer extraParams,
                                     DoublePointer result,
                                     IntPointer resultShapeInfoBuffer,
                                     IntPointer dimension, int dimensionLength);
    public native void execIndexReduceDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                     DoubleBuffer x,
                                     IntBuffer xInfo,
                                     DoubleBuffer extraParams,
                                     DoubleBuffer result,
                                     IntBuffer resultShapeInfoBuffer,
                                     IntBuffer dimension, int dimensionLength);
    public native void execIndexReduceDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                     double[] x,
                                     int[] xInfo,
                                     double[] extraParams,
                                     double[] result,
                                     int[] resultShapeInfoBuffer,
                                     int[] dimension, int dimensionLength);
    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param y
     * @param yShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param dimension
     * @param dimensionLength
     */
    public native void execBroadcastDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                DoublePointer x,
                IntPointer xInfo,
                DoublePointer y,
                IntPointer yInfo,
                DoublePointer result,
                IntPointer resultShapeInfo,
                IntPointer dimension, int dimensionLength);
    public native void execBroadcastDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                DoubleBuffer x,
                IntBuffer xInfo,
                DoubleBuffer y,
                IntBuffer yInfo,
                DoubleBuffer result,
                IntBuffer resultShapeInfo,
                IntBuffer dimension, int dimensionLength);
    public native void execBroadcastDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                double[] x,
                int[] xInfo,
                double[] y,
                int[] yInfo,
                double[] result,
                int[] resultShapeInfo,
                int[] dimension, int dimensionLength);



    /**
     *
     * @param opNum
     * @param dx
     * @param xStride
     * @param y
     * @param yStride
     * @param result
     * @param resultStride
     * @param extraParams
     * @param n
     */
    public native void execPairwiseTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                           DoublePointer dx,
                                           int xStride,
                                           DoublePointer y,
                                           int yStride,
                                           DoublePointer result,
                                           int resultStride,
                                           DoublePointer extraParams, @Cast("Nd4jIndex") long n);
    public native void execPairwiseTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                           DoubleBuffer dx,
                                           int xStride,
                                           DoubleBuffer y,
                                           int yStride,
                                           DoubleBuffer result,
                                           int resultStride,
                                           DoubleBuffer extraParams, @Cast("Nd4jIndex") long n);
    public native void execPairwiseTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                           double[] dx,
                                           int xStride,
                                           double[] y,
                                           int yStride,
                                           double[] result,
                                           int resultStride,
                                           double[] extraParams, @Cast("Nd4jIndex") long n);

    /**
     *
     * @param opNum
     * @param dx
     * @param xShapeInfo
     * @param y
     * @param yShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param extraParams
     * @param n
     * @param xIndexes
     * @param yIndexes
     * @param resultIndexes
     */
    public native void execPairwiseTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                                         int opNum,
                                         DoublePointer dx,
                                         IntPointer xInfo,
                                         DoublePointer y,
                                         IntPointer yInfo,
                                         DoublePointer result,
                                         IntPointer resultShapeInfo,
                                         DoublePointer extraParams,
                                         IntPointer xIndexes,
                                         IntPointer yIndexes,
                                         IntPointer resultIndexes);
    public native void execPairwiseTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                                         int opNum,
                                         DoubleBuffer dx,
                                         IntBuffer xInfo,
                                         DoubleBuffer y,
                                         IntBuffer yInfo,
                                         DoubleBuffer result,
                                         IntBuffer resultShapeInfo,
                                         DoubleBuffer extraParams,
                                         IntBuffer xIndexes,
                                         IntBuffer yIndexes,
                                         IntBuffer resultIndexes);
    public native void execPairwiseTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                                         int opNum,
                                         double[] dx,
                                         int[] xInfo,
                                         double[] y,
                                         int[] yInfo,
                                         double[] result,
                                         int[] resultShapeInfo,
                                         double[] extraParams,
                                         int[] xIndexes,
                                         int[] yIndexes,
                                         int[] resultIndexes);

    /**
     *
     * @param opNum
     * @param dx
     * @param xShapeInfo
     * @param y
     * @param yShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param extraParams
     * @param n
     */
    public native void execPairwiseTransformDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                DoublePointer dx,
                IntPointer xShapeInfo,
                DoublePointer y,
                IntPointer yShapeInfo,
                DoublePointer result,
                IntPointer resultShapeInfo,
                DoublePointer extraParams);
    public native void execPairwiseTransformDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                DoubleBuffer dx,
                IntBuffer xShapeInfo,
                DoubleBuffer y,
                IntBuffer yShapeInfo,
                DoubleBuffer result,
                IntBuffer resultShapeInfo,
                DoubleBuffer extraParams);
    public native void execPairwiseTransformDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                double[] dx,
                int[] xShapeInfo,
                double[] y,
                int[] yShapeInfo,
                double[] result,
                int[] resultShapeInfo,
                double[] extraParams);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @param result
     * @param resultShapeInfo
     */
    public native void execReduceDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                DoublePointer x,
                                IntPointer xInfo,
                                DoublePointer extraParams,
                                DoublePointer result,
                                IntPointer resultShapeInfo);
    public native void execReduceDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                DoubleBuffer x,
                                IntBuffer xInfo,
                                DoubleBuffer extraParams,
                                DoubleBuffer result,
                                IntBuffer resultShapeInfo);
    public native void execReduceDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                double[] x,
                                int[] xInfo,
                                double[] extraParams,
                                double[] result,
                                int[] resultShapeInfo);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @param result
     * @param resultShapeInfo
     */
    public native void execReduceDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                DoublePointer x,
                                IntPointer xInfo,
                                DoublePointer extraParams,
                                DoublePointer result,
                                IntPointer resultShapeInfo,
                                IntPointer dimension,int dimensionLength);
    public native void execReduceDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                DoubleBuffer x,
                                IntBuffer xInfo,
                                DoubleBuffer extraParams,
                                DoubleBuffer result,
                                IntBuffer resultShapeInfo,
                                IntBuffer dimension,int dimensionLength);
    public native void execReduceDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                double[] x,
                                int[] xInfo,
                                double[] extraParams,
                                double[] result,
                                int[] resultShapeInfo,
                                int[] dimension,int dimensionLength);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @return
     */
    public native double execReduceScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                      DoublePointer x,
                                      IntPointer xInfo,
                                      DoublePointer extraParams);
    public native double execReduceScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                      DoubleBuffer x,
                                      IntBuffer xInfo,
                                      DoubleBuffer extraParams);
    public native double execReduceScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                      double[] x,
                                      int[] xInfo,
                                      double[] extraParams);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParamsVals
     * @param y
     * @param yShapeInfo
     * @param result
     * @param resultShapeInfo
     */
    public native void execReduce3Double(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                 DoublePointer x,
                                 IntPointer xInfo,
                                 DoublePointer extraParamsVals,
                                 DoublePointer y,
                                 IntPointer yInfo,
                                 DoublePointer result,
                                 IntPointer resultShapeInfo);
    public native void execReduce3Double(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                 DoubleBuffer x,
                                 IntBuffer xInfo,
                                 DoubleBuffer extraParamsVals,
                                 DoubleBuffer y,
                                 IntBuffer yInfo,
                                 DoubleBuffer result,
                                 IntBuffer resultShapeInfo);
    public native void execReduce3Double(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                 double[] x,
                                 int[] xInfo,
                                 double[] extraParamsVals,
                                 double[] y,
                                 int[] yInfo,
                                 double[] result,
                                 int[] resultShapeInfo);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParamsVals
     * @param y
     * @param yShapeInfo
     */
    public native double execReduce3ScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                         DoublePointer x,
                                         IntPointer xInfo,
                                         DoublePointer extraParamsVals,
                                         DoublePointer y,
                                         IntPointer yInfo);
    public native double execReduce3ScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                         DoubleBuffer x,
                                         IntBuffer xInfo,
                                         DoubleBuffer extraParamsVals,
                                         DoubleBuffer y,
                                         IntBuffer yInfo);
    public native double execReduce3ScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                         double[] x,
                                         int[] xInfo,
                                         double[] extraParamsVals,
                                         double[] y,
                                         int[] yInfo);
    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParamsVals
     * @param y
     * @param yShapeInfo
     * @param result
     * @param resultShapeInfoBuffer
     * @param dimension
     * @param dimensionLength
     */
    public native void execReduce3Double(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                 DoublePointer x,
                                 IntPointer xInfo,
                                 DoublePointer extraParamsVals,
                                 DoublePointer y,
                                 IntPointer yInfo,
                                 DoublePointer result,
                                 IntPointer resultShapeInfoBuffer,
                                 IntPointer dimension,
                                 int dimensionLength);
    public native void execReduce3Double(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                 DoubleBuffer x,
                                 IntBuffer xInfo,
                                 DoubleBuffer extraParamsVals,
                                 DoubleBuffer y,
                                 IntBuffer yInfo,
                                 DoubleBuffer result,
                                 IntBuffer resultShapeInfoBuffer,
                                 IntBuffer dimension,
                                 int dimensionLength);
    public native void execReduce3Double(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                 double[] x,
                                 int[] xInfo,
                                 double[] extraParamsVals,
                                 double[] y,
                                 int[] yInfo,
                                 double[] result,
                                 int[] resultShapeInfoBuffer,
                                 int[] dimension,
                                 int dimensionLength);
    /**
     *
     * @param opNum
     * @param x
     * @param xStride
     * @param result
     * @param resultStride
     * @param scalar
     * @param extraParams
     * @param n
     */
    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                DoublePointer x,
                                int xStride,
                                DoublePointer result,
                                int resultStride,
                                double scalar,
                                DoublePointer extraParams,
                                @Cast("Nd4jIndex") long n);
    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                DoubleBuffer x,
                                int xStride,
                                DoubleBuffer result,
                                int resultStride,
                                double scalar,
                                DoubleBuffer extraParams,
                                @Cast("Nd4jIndex") long n);
    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                double[] x,
                                int xStride,
                                double[] result,
                                int resultStride,
                                double scalar,
                                double[] extraParams,
                                @Cast("Nd4jIndex") long n);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param scalar
     * @param extraParams
     * @param n
     */
    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                              DoublePointer x,
                              IntPointer xInfo,
                              DoublePointer result,
                              IntPointer resultShapeInfo,
                              double scalar,
                              DoublePointer extraParams);
    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                              DoubleBuffer x,
                              IntBuffer xInfo,
                              DoubleBuffer result,
                              IntBuffer resultShapeInfo,
                              double scalar,
                              DoubleBuffer extraParams);
    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                              double[] x,
                              int[] xInfo,
                              double[] result,
                              int[] resultShapeInfo,
                              double scalar,
                              double[] extraParams);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param scalar
     * @param extraParams
     * @param n
     * @param xIndexes
     * @param resultIndexes
     */
    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                              DoublePointer x,
                              IntPointer xInfo,
                              DoublePointer result,
                              IntPointer resultShapeInfo,
                              double scalar,
                              DoublePointer extraParams,
                              @Cast("Nd4jIndex") long n,
                              IntPointer xIndexes,
                              IntPointer resultIndexes);
    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                              DoubleBuffer x,
                              IntBuffer xInfo,
                              DoubleBuffer result,
                              IntBuffer resultShapeInfo,
                              double scalar,
                              DoubleBuffer extraParams,
                              @Cast("Nd4jIndex") long n,
                              IntBuffer xIndexes,
                              IntBuffer resultIndexes);
    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                              double[] x,
                              int[] xInfo,
                              double[] result,
                              int[] resultShapeInfo,
                              double scalar,
                              double[] extraParams,
                              @Cast("Nd4jIndex") long n,
                              int[] xIndexes,
                              int[] resultIndexes);
    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     */
    public native double execSummaryStatsScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,DoublePointer x,
                                              IntPointer xInfo,
                                              DoublePointer extraParams,@Cast("bool") boolean biasCorrected);
    public native double execSummaryStatsScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,DoubleBuffer x,
                                              IntBuffer xInfo,
                                              DoubleBuffer extraParams,@Cast("bool") boolean biasCorrected);
    public native double execSummaryStatsScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,double[] x,
                                              int[] xInfo,
                                              double[] extraParams,@Cast("bool") boolean biasCorrected);
    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @param result
     * @param resultShapeInfo
     */
    public native void execSummaryStatsDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                      DoublePointer x,
                                      IntPointer xInfo,
                                      DoublePointer extraParams,
                                      DoublePointer result,
                                      IntPointer resultShapeInfo,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                      DoubleBuffer x,
                                      IntBuffer xInfo,
                                      DoubleBuffer extraParams,
                                      DoubleBuffer result,
                                      IntBuffer resultShapeInfo,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                      double[] x,
                                      int[] xInfo,
                                      double[] extraParams,
                                      double[] result,
                                      int[] resultShapeInfo,@Cast("bool") boolean biasCorrected);
    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @param result
     * @param resultShapeInfoBuffer
     * @param dimension
     * @param dimensionLength
     */
    public native void execSummaryStatsDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,DoublePointer x,
                                      IntPointer xInfo,
                                      DoublePointer extraParams,
                                      DoublePointer result,
                                      IntPointer resultShapeInfoBuffer,
                                      IntPointer dimension, int dimensionLength,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,DoubleBuffer x,
                                      IntBuffer xInfo,
                                      DoubleBuffer extraParams,
                                      DoubleBuffer result,
                                      IntBuffer resultShapeInfoBuffer,
                                      IntBuffer dimension, int dimensionLength,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,double[] x,
                                      int[] xInfo,
                                      double[] extraParams,
                                      double[] result,
                                      int[] resultShapeInfoBuffer,
                                      int[] dimension, int dimensionLength,@Cast("bool") boolean biasCorrected);
    /**
     *
     * @param opNum
     * @param dx
     * @param xStride
     * @param result
     * @param resultStride
     * @param extraParams
     * @param n
     */
    public native void execTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                   DoublePointer dx,
                                   int xStride,
                                   DoublePointer result,
                                   int resultStride,
                                   DoublePointer extraParams, @Cast("Nd4jIndex") long n);
    public native void execTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                   DoubleBuffer dx,
                                   int xStride,
                                   DoubleBuffer result,
                                   int resultStride,
                                   DoubleBuffer extraParams, @Cast("Nd4jIndex") long n);
    public native void execTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                   double[] dx,
                                   int xStride,
                                   double[] result,
                                   int resultStride,
                                   double[] extraParams, @Cast("Nd4jIndex") long n);

    /**
     *
     * @param opNum
     * @param dx
     * @param xShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param extraParams
     * @param n
     */
    public native void execTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                   DoublePointer dx,
                                   IntPointer xInfo,
                                   DoublePointer result,
                                   IntPointer resultShapeInfo,
                                   DoublePointer extraParams);
    public native void execTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                   DoubleBuffer dx,
                                   IntBuffer xInfo,
                                   DoubleBuffer result,
                                   IntBuffer resultShapeInfo,
                                   DoubleBuffer extraParams);
    public native void execTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                   double[] dx,
                                   int[] xInfo,
                                   double[] result,
                                   int[] resultShapeInfo,
                                   double[] extraParams);

    /**
     *
     * @param opNum
     * @param dx
     * @param xShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param extraParams
     * @param n
     */
    public native void execTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                   DoublePointer dx,
                                   IntPointer xShapeInfo,
                                   DoublePointer result,
                                   IntPointer resultShapeInfo,
                                   DoublePointer extraParams,
                                   IntPointer xIndexes,
                                   IntPointer resultIndexes);
    public native void execTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                   DoubleBuffer dx,
                                   IntBuffer xShapeInfo,
                                   DoubleBuffer result,
                                   IntBuffer resultShapeInfo,
                                   DoubleBuffer extraParams,
                                   IntBuffer xIndexes,
                                   IntBuffer resultIndexes);
    public native void execTransformDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                   double[] dx,
                                   int[] xShapeInfo,
                                   double[] result,
                                   int[] resultShapeInfo,
                                   double[] extraParams,
                                   int[] xIndexes,
                                   int[] resultIndexes);

    /**
    *
    * @param opNum
    * @param x
    * @param xShapeInfo
    * @param extraParams
    */
    public native float execIndexReduceScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                                           int opNum,
                                           FloatPointer x,
                                           IntPointer xShapeInfo,
                                           FloatPointer extraParams);
    public native float execIndexReduceScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                                           int opNum,
                                           FloatBuffer x,
                                           IntBuffer xShapeInfo,
                                           FloatBuffer extraParams);
    public native float execIndexReduceScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                                           int opNum,
                                           float[] x,
                                           int[] xShapeInfo,
                                           float[] extraParams);

    public native float execIndexReduceScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                                           int opNum,
                                           @Cast("float16*") ShortPointer x,
                                           IntPointer xShapeInfo,
                                           @Cast("float16*") ShortPointer extraParams);
    public native float execIndexReduceScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                                           int opNum,
                                           @Cast("float16*") ShortBuffer x,
                                           IntBuffer xShapeInfo,
                                           @Cast("float16*") ShortBuffer extraParams);
    public native float execIndexReduceScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                                           int opNum,
                                           @Cast("float16*") short[] x,
                                           int[] xShapeInfo,
                                           @Cast("float16*") short[] extraParams);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @param result
     * @param resultShapeInfoBuffer
     * @param dimension
     * @param dimensionLength
     */
    public native void execIndexReduceFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    FloatPointer x,
                                    IntPointer xShapeInfo,
                                    FloatPointer extraParams,
                                    FloatPointer result,
                                    IntPointer resultShapeInfoBuffer,
                                    IntPointer dimension, int dimensionLength);
    public native void execIndexReduceFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    FloatBuffer x,
                                    IntBuffer xShapeInfo,
                                    FloatBuffer extraParams,
                                    FloatBuffer result,
                                    IntBuffer resultShapeInfoBuffer,
                                    IntBuffer dimension, int dimensionLength);
    public native void execIndexReduceFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    float[] x,
                                    int[] xShapeInfo,
                                    float[] extraParams,
                                    float[] result,
                                    int[] resultShapeInfoBuffer,
                                    int[] dimension, int dimensionLength);

    public native void execIndexReduceHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    @Cast("float16*") ShortPointer x,
                                    IntPointer xShapeInfo,
                                    @Cast("float16*") ShortPointer extraParams,
                                    @Cast("float16*") ShortPointer result,
                                    IntPointer resultShapeInfoBuffer,
                                    IntPointer dimension, int dimensionLength);
    public native void execIndexReduceHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    @Cast("float16*") ShortBuffer x,
                                    IntBuffer xShapeInfo,
                                    @Cast("float16*") ShortBuffer extraParams,
                                    @Cast("float16*") ShortBuffer result,
                                    IntBuffer resultShapeInfoBuffer,
                                    IntBuffer dimension, int dimensionLength);
    public native void execIndexReduceHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    @Cast("float16*") short[] x,
                                    int[] xShapeInfo,
                                    @Cast("float16*") short[] extraParams,
                                    @Cast("float16*") short[] result,
                                    int[] resultShapeInfoBuffer,
                                    int[] dimension, int dimensionLength);
    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param y
     * @param yShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param dimension
     * @param dimensionLength
     */
    public native void execBroadcastFloat(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                FloatPointer x,
                IntPointer xShapeInfo,
                FloatPointer y,
                IntPointer yShapeInfo,
                FloatPointer result,
                IntPointer resultShapeInfo,
                IntPointer dimension, int dimensionLength);
    public native void execBroadcastFloat(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                FloatBuffer x,
                IntBuffer xShapeInfo,
                FloatBuffer y,
                IntBuffer yShapeInfo,
                FloatBuffer result,
                IntBuffer resultShapeInfo,
                IntBuffer dimension, int dimensionLength);
    public native void execBroadcastFloat(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                float[] x,
                int[] xShapeInfo,
                float[] y,
                int[] yShapeInfo,
                float[] result,
                int[] resultShapeInfo,
                int[] dimension, int dimensionLength);

    public native void execBroadcastHalf(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                @Cast("float16*") ShortPointer x,
                IntPointer xShapeInfo,
                @Cast("float16*") ShortPointer y,
                IntPointer yShapeInfo,
                @Cast("float16*") ShortPointer result,
                IntPointer resultShapeInfo,
                IntPointer dimension, int dimensionLength);
    public native void execBroadcastHalf(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                @Cast("float16*") ShortBuffer x,
                IntBuffer xShapeInfo,
                @Cast("float16*") ShortBuffer y,
                IntBuffer yShapeInfo,
                @Cast("float16*") ShortBuffer result,
                IntBuffer resultShapeInfo,
                IntBuffer dimension, int dimensionLength);
    public native void execBroadcastHalf(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                @Cast("float16*") short[] x,
                int[] xShapeInfo,
                @Cast("float16*") short[] y,
                int[] yShapeInfo,
                @Cast("float16*") short[] result,
                int[] resultShapeInfo,
                int[] dimension, int dimensionLength);



    /**
     *
     * @param opNum
     * @param dx
     * @param xStride
     * @param y
     * @param yStride
     * @param result
     * @param resultStride
     * @param extraParams
     * @param n
     */
    public native void execPairwiseTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                          FloatPointer dx,
                                          int xStride,
                                          FloatPointer y,
                                          int yStride,
                                          FloatPointer result,
                                          int resultStride,
                                          FloatPointer extraParams, @Cast("Nd4jIndex") long n);
    public native void execPairwiseTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                          FloatBuffer dx,
                                          int xStride,
                                          FloatBuffer y,
                                          int yStride,
                                          FloatBuffer result,
                                          int resultStride,
                                          FloatBuffer extraParams, @Cast("Nd4jIndex") long n);
    public native void execPairwiseTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                          float[] dx,
                                          int xStride,
                                          float[] y,
                                          int yStride,
                                          float[] result,
                                          int resultStride,
                                          float[] extraParams, @Cast("Nd4jIndex") long n);

    public native void execPairwiseTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                          @Cast("float16*") ShortPointer dx,
                                          int xStride,
                                          @Cast("float16*") ShortPointer y,
                                          int yStride,
                                          @Cast("float16*") ShortPointer result,
                                          int resultStride,
                                          @Cast("float16*") ShortPointer extraParams, @Cast("Nd4jIndex") long n);
    public native void execPairwiseTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                          @Cast("float16*") ShortBuffer dx,
                                          int xStride,
                                          @Cast("float16*") ShortBuffer y,
                                          int yStride,
                                          @Cast("float16*") ShortBuffer result,
                                          int resultStride,
                                          @Cast("float16*") ShortBuffer extraParams, @Cast("Nd4jIndex") long n);
    public native void execPairwiseTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                          @Cast("float16*") short[] dx,
                                          int xStride,
                                          @Cast("float16*") short[] y,
                                          int yStride,
                                          @Cast("float16*") short[] result,
                                          int resultStride,
                                          @Cast("float16*") short[] extraParams, @Cast("Nd4jIndex") long n);

    /**
     *
     * @param opNum
     * @param dx
     * @param xShapeInfo
     * @param y
     * @param yShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param extraParams
     * @param n
     * @param xIndexes
     * @param yIndexes
     * @param resultIndexes
     */
    public native void execPairwiseTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        FloatPointer dx,
                                        IntPointer xShapeInfo,
                                        FloatPointer y,
                                        IntPointer yShapeInfo,
                                        FloatPointer result,
                                        IntPointer resultShapeInfo,
                                        FloatPointer extraParams,
                                        IntPointer xIndexes,
                                        IntPointer yIndexes,
                                        IntPointer resultIndexes);
    public native void execPairwiseTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        FloatBuffer dx,
                                        IntBuffer xShapeInfo,
                                        FloatBuffer y,
                                        IntBuffer yShapeInfo,
                                        FloatBuffer result,
                                        IntBuffer resultShapeInfo,
                                        FloatBuffer extraParams,
                                        IntBuffer xIndexes,
                                        IntBuffer yIndexes,
                                        IntBuffer resultIndexes);
    public native void execPairwiseTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        float[] dx,
                                        int[] xShapeInfo,
                                        float[] y,
                                        int[] yShapeInfo,
                                        float[] result,
                                        int[] resultShapeInfo,
                                        float[] extraParams,
                                        int[] xIndexes,
                                        int[] yIndexes,
                                        int[] resultIndexes);

    public native void execPairwiseTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        @Cast("float16*") ShortPointer dx,
                                        IntPointer xShapeInfo,
                                        @Cast("float16*") ShortPointer y,
                                        IntPointer yShapeInfo,
                                        @Cast("float16*") ShortPointer result,
                                        IntPointer resultShapeInfo,
                                        @Cast("float16*") ShortPointer extraParams,
                                        IntPointer xIndexes,
                                        IntPointer yIndexes,
                                        IntPointer resultIndexes);
    public native void execPairwiseTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        @Cast("float16*") ShortBuffer dx,
                                        IntBuffer xShapeInfo,
                                        @Cast("float16*") ShortBuffer y,
                                        IntBuffer yShapeInfo,
                                        @Cast("float16*") ShortBuffer result,
                                        IntBuffer resultShapeInfo,
                                        @Cast("float16*") ShortBuffer extraParams,
                                        IntBuffer xIndexes,
                                        IntBuffer yIndexes,
                                        IntBuffer resultIndexes);
    public native void execPairwiseTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        @Cast("float16*") short[] dx,
                                        int[] xShapeInfo,
                                        @Cast("float16*") short[] y,
                                        int[] yShapeInfo,
                                        @Cast("float16*") short[] result,
                                        int[] resultShapeInfo,
                                        @Cast("float16*") short[] extraParams,
                                        int[] xIndexes,
                                        int[] yIndexes,
                                        int[] resultIndexes);

    /**
     *
     * @param opNum
     * @param dx
     * @param xShapeInfo
     * @param y
     * @param yShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param extraParams
     * @param n
     */
    public native void execPairwiseTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        FloatPointer dx,
                                        IntPointer xShapeInfo,
                                        FloatPointer y,
                                        IntPointer yShapeInfo,
                                        FloatPointer result,
                                        IntPointer resultShapeInfo,
                                        FloatPointer extraParams);
    public native void execPairwiseTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        FloatBuffer dx,
                                        IntBuffer xShapeInfo,
                                        FloatBuffer y,
                                        IntBuffer yShapeInfo,
                                        FloatBuffer result,
                                        IntBuffer resultShapeInfo,
                                        FloatBuffer extraParams);
    public native void execPairwiseTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        float[] dx,
                                        int[] xShapeInfo,
                                        float[] y,
                                        int[] yShapeInfo,
                                        float[] result,
                                        int[] resultShapeInfo,
                                        float[] extraParams);

    public native void execPairwiseTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        @Cast("float16*") ShortPointer dx,
                                        IntPointer xShapeInfo,
                                        @Cast("float16*") ShortPointer y,
                                        IntPointer yShapeInfo,
                                        @Cast("float16*") ShortPointer result,
                                        IntPointer resultShapeInfo,
                                        @Cast("float16*") ShortPointer extraParams);
    public native void execPairwiseTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        @Cast("float16*") ShortBuffer dx,
                                        IntBuffer xShapeInfo,
                                        @Cast("float16*") ShortBuffer y,
                                        IntBuffer yShapeInfo,
                                        @Cast("float16*") ShortBuffer result,
                                        IntBuffer resultShapeInfo,
                                        @Cast("float16*") ShortBuffer extraParams);
    public native void execPairwiseTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                        @Cast("float16*") short[] dx,
                                        int[] xShapeInfo,
                                        @Cast("float16*") short[] y,
                                        int[] yShapeInfo,
                                        @Cast("float16*") short[] result,
                                        int[] resultShapeInfo,
                                        @Cast("float16*") short[] extraParams);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @param result
     * @param resultShapeInfo
     */
    public native void execReduceFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               FloatPointer x,
                               IntPointer xShapeInfo,
                               FloatPointer extraParams,
                               FloatPointer result,
                               IntPointer resultShapeInfo);
    public native void execReduceFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               FloatBuffer x,
                               IntBuffer xShapeInfo,
                               FloatBuffer extraParams,
                               FloatBuffer result,
                               IntBuffer resultShapeInfo);
    public native void execReduceFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               float[] x,
                               int[] xShapeInfo,
                               float[] extraParams,
                               float[] result,
                               int[] resultShapeInfo);

    public native void execReduceHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               @Cast("float16*") ShortPointer x,
                               IntPointer xShapeInfo,
                               @Cast("float16*") ShortPointer extraParams,
                               @Cast("float16*") ShortPointer result,
                               IntPointer resultShapeInfo);
    public native void execReduceHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               @Cast("float16*") ShortBuffer x,
                               IntBuffer xShapeInfo,
                               @Cast("float16*") ShortBuffer extraParams,
                               @Cast("float16*") ShortBuffer result,
                               IntBuffer resultShapeInfo);
    public native void execReduceHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               @Cast("float16*") short[] x,
                               int[] xShapeInfo,
                               @Cast("float16*") short[] extraParams,
                               @Cast("float16*") short[] result,
                               int[] resultShapeInfo);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @param result
     * @param resultShapeInfo
     */
    public native void execReduceFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               FloatPointer x,
                               IntPointer xShapeInfo,
                               FloatPointer extraParams,
                               FloatPointer result,
                               IntPointer resultShapeInfo,
                               IntPointer dimension,int dimensionLength);
    public native void execReduceFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               FloatBuffer x,
                               IntBuffer xShapeInfo,
                               FloatBuffer extraParams,
                               FloatBuffer result,
                               IntBuffer resultShapeInfo,
                               IntBuffer dimension,int dimensionLength);
    public native void execReduceFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               float[] x,
                               int[] xShapeInfo,
                               float[] extraParams,
                               float[] result,
                               int[] resultShapeInfo,
                               int[] dimension,int dimensionLength);

    public native void execReduceHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               @Cast("float16*") ShortPointer x,
                               IntPointer xShapeInfo,
                               @Cast("float16*") ShortPointer extraParams,
                               @Cast("float16*") ShortPointer result,
                               IntPointer resultShapeInfo,
                               IntPointer dimension,int dimensionLength);
    public native void execReduceHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               @Cast("float16*") ShortBuffer x,
                               IntBuffer xShapeInfo,
                               @Cast("float16*") ShortBuffer extraParams,
                               @Cast("float16*") ShortBuffer result,
                               IntBuffer resultShapeInfo,
                               IntBuffer dimension,int dimensionLength);
    public native void execReduceHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               @Cast("float16*") short[] x,
                               int[] xShapeInfo,
                               @Cast("float16*") short[] extraParams,
                               @Cast("float16*") short[] result,
                               int[] resultShapeInfo,
                               int[] dimension,int dimensionLength);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @return
     */
    public native float execReduceScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    FloatPointer x,
                                    IntPointer xShapeInfo,
                                    FloatPointer extraParams);
    public native float execReduceScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    FloatBuffer x,
                                    IntBuffer xShapeInfo,
                                    FloatBuffer extraParams);
    public native float execReduceScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    float[] x,
                                    int[] xShapeInfo,
                                    float[] extraParams);

    public native float execReduceScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    @Cast("float16*") ShortPointer x,
                                    IntPointer xShapeInfo,
                                    @Cast("float16*") ShortPointer extraParams);
    public native float execReduceScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    @Cast("float16*") ShortBuffer x,
                                    IntBuffer xShapeInfo,
                                    @Cast("float16*") ShortBuffer extraParams);
    public native float execReduceScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                    @Cast("float16*") short[] x,
                                    int[] xShapeInfo,
                                    @Cast("float16*") short[] extraParams);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParamsVals
     * @param y
     * @param yShapeInfo
     * @param result
     * @param resultShapeInfo
     */
    public native void execReduce3Float(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                FloatPointer x,
                                IntPointer xShapeInfo,
                                FloatPointer extraParamsVals,
                                FloatPointer y,
                                IntPointer yShapeInfo,
                                FloatPointer result,
                                IntPointer resultShapeInfo);
    public native void execReduce3Float(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                FloatBuffer x,
                                IntBuffer xShapeInfo,
                                FloatBuffer extraParamsVals,
                                FloatBuffer y,
                                IntBuffer yShapeInfo,
                                FloatBuffer result,
                                IntBuffer resultShapeInfo);
    public native void execReduce3Float(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                float[] x,
                                int[] xShapeInfo,
                                float[] extraParamsVals,
                                float[] y,
                                int[] yShapeInfo,
                                float[] result,
                                int[] resultShapeInfo);

    public native void execReduce3Half(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                @Cast("float16*") ShortPointer x,
                                IntPointer xShapeInfo,
                                @Cast("float16*") ShortPointer extraParamsVals,
                                @Cast("float16*") ShortPointer y,
                                IntPointer yShapeInfo,
                                @Cast("float16*") ShortPointer result,
                                IntPointer resultShapeInfo);
    public native void execReduce3Half(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                @Cast("float16*") ShortBuffer x,
                                IntBuffer xShapeInfo,
                                @Cast("float16*") ShortBuffer extraParamsVals,
                                @Cast("float16*") ShortBuffer y,
                                IntBuffer yShapeInfo,
                                @Cast("float16*") ShortBuffer result,
                                IntBuffer resultShapeInfo);
    public native void execReduce3Half(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                @Cast("float16*") short[] x,
                                int[] xShapeInfo,
                                @Cast("float16*") short[] extraParamsVals,
                                @Cast("float16*") short[] y,
                                int[] yShapeInfo,
                                @Cast("float16*") short[] result,
                                int[] resultShapeInfo);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParamsVals
     * @param y
     * @param yShapeInfo
     */
    public native float execReduce3ScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                       FloatPointer x,
                                       IntPointer xShapeInfo,
                                       FloatPointer extraParamsVals,
                                       FloatPointer y,
                                       IntPointer yShapeInfo);
    public native float execReduce3ScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                       FloatBuffer x,
                                       IntBuffer xShapeInfo,
                                       FloatBuffer extraParamsVals,
                                       FloatBuffer y,
                                       IntBuffer yShapeInfo);
    public native float execReduce3ScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                       float[] x,
                                       int[] xShapeInfo,
                                       float[] extraParamsVals,
                                       float[] y,
                                       int[] yShapeInfo);

    public native float execReduce3ScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                       @Cast("float16*") ShortPointer x,
                                       IntPointer xShapeInfo,
                                       @Cast("float16*") ShortPointer extraParamsVals,
                                       @Cast("float16*") ShortPointer y,
                                       IntPointer yShapeInfo);
    public native float execReduce3ScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                       @Cast("float16*") ShortBuffer x,
                                       IntBuffer xShapeInfo,
                                       @Cast("float16*") ShortBuffer extraParamsVals,
                                       @Cast("float16*") ShortBuffer y,
                                       IntBuffer yShapeInfo);
    public native float execReduce3ScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                       @Cast("float16*") short[] x,
                                       int[] xShapeInfo,
                                       @Cast("float16*") short[] extraParamsVals,
                                       @Cast("float16*") short[] y,
                                       int[] yShapeInfo);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParamsVals
     * @param y
     * @param yShapeInfo
     * @param result
     * @param resultShapeInfoBuffer
     * @param dimension
     * @param dimensionLength
     */
    public native void execReduce3Float(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                FloatPointer x,
                                IntPointer xShapeInfo,
                                FloatPointer extraParamsVals,
                                FloatPointer y,
                                IntPointer yShapeInfo,
                                FloatPointer result,
                                IntPointer resultShapeInfoBuffer,
                                IntPointer dimension,
                                int dimensionLength);
    public native void execReduce3Float(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                FloatBuffer x,
                                IntBuffer xShapeInfo,
                                FloatBuffer extraParamsVals,
                                FloatBuffer y,
                                IntBuffer yShapeInfo,
                                FloatBuffer result,
                                IntBuffer resultShapeInfoBuffer,
                                IntBuffer dimension,
                                int dimensionLength);
    public native void execReduce3Float(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                float[] x,
                                int[] xShapeInfo,
                                float[] extraParamsVals,
                                float[] y,
                                int[] yShapeInfo,
                                float[] result,
                                int[] resultShapeInfoBuffer,
                                int[] dimension,
                                int dimensionLength);

    public native void execReduce3Half(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                @Cast("float16*") ShortPointer x,
                                IntPointer xShapeInfo,
                                @Cast("float16*") ShortPointer extraParamsVals,
                                @Cast("float16*") ShortPointer y,
                                IntPointer yShapeInfo,
                                @Cast("float16*") ShortPointer result,
                                IntPointer resultShapeInfoBuffer,
                                IntPointer dimension,
                                int dimensionLength);
    public native void execReduce3Half(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                @Cast("float16*") ShortBuffer x,
                                IntBuffer xShapeInfo,
                                @Cast("float16*") ShortBuffer extraParamsVals,
                                @Cast("float16*") ShortBuffer y,
                                IntBuffer yShapeInfo,
                                @Cast("float16*") ShortBuffer result,
                                IntBuffer resultShapeInfoBuffer,
                                IntBuffer dimension,
                                int dimensionLength);
    public native void execReduce3Half(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                @Cast("float16*") short[] x,
                                int[] xShapeInfo,
                                @Cast("float16*") short[] extraParamsVals,
                                @Cast("float16*") short[] y,
                                int[] yShapeInfo,
                                @Cast("float16*") short[] result,
                                int[] resultShapeInfoBuffer,
                                int[] dimension,
                                int dimensionLength);
    /**
     *
     * @param opNum
     * @param x
     * @param xStride
     * @param result
     * @param resultStride
     * @param scalar
     * @param extraParams
     * @param n
     */
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               FloatPointer x,
                               int xStride,
                               FloatPointer result,
                               int resultStride,
                               float scalar,
                               FloatPointer extraParams,
                               @Cast("Nd4jIndex") long n);
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               FloatBuffer x,
                               int xStride,
                               FloatBuffer result,
                               int resultStride,
                               float scalar,
                               FloatBuffer extraParams,
                               @Cast("Nd4jIndex") long n);
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                               float[] x,
                               int xStride,
                               float[] result,
                               int resultStride,
                               float scalar,
                               float[] extraParams,
                               @Cast("Nd4jIndex") long n);

    public native void execScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                @Cast("float16*") ShortPointer x,
                int xStride,
                @Cast("float16*") ShortPointer result,
                int resultStride,
                float scalar,
                @Cast("float16*") ShortPointer extraParams,
                @Cast("Nd4jIndex") long n);
    public native void execScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                @Cast("float16*") ShortBuffer x,
                int xStride,
                @Cast("float16*") ShortBuffer result,
                int resultStride,
                float scalar,
                @Cast("float16*") ShortBuffer extraParams,
                @Cast("Nd4jIndex") long n);
    public native void execScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,
                int opNum,
                @Cast("float16*") short[] x,
                int xStride,
                @Cast("float16*") short[] result,
                int resultStride,
                float scalar,
                @Cast("float16*") short[] extraParams,
                @Cast("Nd4jIndex") long n);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param scalar
     * @param extraParams
     * @param n
     */
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             FloatPointer x,
                             IntPointer xShapeInfo,
                             FloatPointer result,
                             IntPointer resultShapeInfo,
                             float scalar,
                             FloatPointer extraParams);
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             FloatBuffer x,
                             IntBuffer xShapeInfo,
                             FloatBuffer result,
                             IntBuffer resultShapeInfo,
                             float scalar,
                             FloatBuffer extraParams);
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             float[] x,
                             int[] xShapeInfo,
                             float[] result,
                             int[] resultShapeInfo,
                             float scalar,
                             float[] extraParams);


    public native void execScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             @Cast("float16*") ShortPointer x,
                             IntPointer xShapeInfo,
                             @Cast("float16*") ShortPointer result,
                             IntPointer resultShapeInfo,
                             float scalar,
                             @Cast("float16*") ShortPointer extraParams);
    public native void execScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             @Cast("float16*") ShortBuffer x,
                             IntBuffer xShapeInfo,
                             @Cast("float16*") ShortBuffer result,
                             IntBuffer resultShapeInfo,
                             float scalar,
                             @Cast("float16*") ShortBuffer extraParams);
    public native void execScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             @Cast("float16*") short[] x,
                             int[] xShapeInfo,
                             @Cast("float16*") short[] result,
                             int[] resultShapeInfo,
                             float scalar,
                             @Cast("float16*") short[] extraParams);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param scalar
     * @param extraParams
     * @param n
     * @param xIndexes
     * @param resultIndexes
     */
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             FloatPointer x,
                             IntPointer xShapeInfo,
                             FloatPointer result,
                             IntPointer resultShapeInfo,
                             float scalar,
                             FloatPointer extraParams,
                             IntPointer xIndexes,
                             IntPointer resultIndexes);
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             FloatBuffer x,
                             IntBuffer xShapeInfo,
                             FloatBuffer result,
                             IntBuffer resultShapeInfo,
                             float scalar,
                             FloatBuffer extraParams,
                             IntBuffer xIndexes,
                             IntBuffer resultIndexes);
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             float[] x,
                             int[] xShapeInfo,
                             float[] result,
                             int[] resultShapeInfo,
                             float scalar,
                             float[] extraParams,
                             int[] xIndexes,
                             int[] resultIndexes);


    /*
     * Special case: scalarOp alang dimension
     */
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             FloatPointer x,
                             IntPointer xShapeInfo,
                             FloatPointer z,
                             IntPointer zShapeInfo,
                             FloatPointer scalars,
                             FloatPointer extraParams,
                             IntPointer dimension,
                             int dimensionLength);
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             FloatBuffer x,
                             IntBuffer xShapeInfo,
                             FloatBuffer z,
                             IntBuffer zShapeInfo,
                             FloatBuffer scalars,
                             FloatBuffer extraParams,
                             IntBuffer dimension,
                             int dimensionLength);
    public native void execScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             float[] x,
                             int[] xShapeInfo,
                             float[] z,
                             int[] zShapeInfo,
                             float[] scalars,
                             float[] extraParams,
                             int[] dimension,
                             int dimensionLength);

    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             DoublePointer x,
                             IntPointer xShapeInfo,
                             DoublePointer z,
                             IntPointer zShapeInfo,
                             DoublePointer scalars,
                             DoublePointer extraParams,
                             IntPointer dimension,
                             int dimensionLength);
    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             DoubleBuffer x,
                             IntBuffer xShapeInfo,
                             DoubleBuffer z,
                             IntBuffer zShapeInfo,
                             DoubleBuffer scalars,
                             DoubleBuffer extraParams,
                             IntBuffer dimension,
                             int dimensionLength);
    public native void execScalarDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             double[] x,
                             int[] xShapeInfo,
                             double[] z,
                             int[] zShapeInfo,
                             double[] scalars,
                             double[] extraParams,
                             int[] dimension,
                             int dimensionLength);

    public native void execScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             @Cast("float16*") ShortPointer x,
                             IntPointer xShapeInfo,
                             @Cast("float16*") ShortPointer z,
                             IntPointer zShapeInfo,
                             @Cast("float16*") ShortPointer scalars,
                             @Cast("float16*") ShortPointer extraParams,
                             IntPointer dimension,
                             int dimensionLength);
    public native void execScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             @Cast("float16*") ShortBuffer x,
                             IntBuffer xShapeInfo,
                             @Cast("float16*") ShortBuffer z,
                             IntBuffer zShapeInfo,
                             @Cast("float16*") ShortBuffer scalars,
                             @Cast("float16*") ShortBuffer extraParams,
                             IntBuffer dimension,
                             int dimensionLength);
    public native void execScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                             @Cast("float16*") short[] x,
                             int[] xShapeInfo,
                             @Cast("float16*") short[] z,
                             int[] zShapeInfo,
                             @Cast("float16*") short[] scalars,
                             @Cast("float16*") short[] extraParams,
                             int[] dimension,
                             int dimensionLength);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     */
    public native float execSummaryStatsScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,FloatPointer x,
                                            IntPointer xShapeInfo,
                                            FloatPointer extraParams,@Cast("bool") boolean biasCorrected);
    public native float execSummaryStatsScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,FloatBuffer x,
                                            IntBuffer xShapeInfo,
                                            FloatBuffer extraParams,@Cast("bool") boolean biasCorrected);
    public native float execSummaryStatsScalarFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,float[] x,
                                            int[] xShapeInfo,
                                            float[] extraParams,@Cast("bool") boolean biasCorrected);

    public native float execSummaryStatsScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,@Cast("float16*") ShortPointer x,
                                            IntPointer xShapeInfo,
                                            @Cast("float16*") ShortPointer extraParams,@Cast("bool") boolean biasCorrected);
    public native float execSummaryStatsScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,@Cast("float16*") ShortBuffer x,
                                            IntBuffer xShapeInfo,
                                            @Cast("float16*") ShortBuffer extraParams,@Cast("bool") boolean biasCorrected);
    public native float execSummaryStatsScalarHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,@Cast("float16*") short[] x,
                                            int[] xShapeInfo,
                                            @Cast("float16*") short[] extraParams,@Cast("bool") boolean biasCorrected);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @param result
     * @param resultShapeInfo
     */
    public native void execSummaryStatsFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                     FloatPointer x,
                                     IntPointer xShapeInfo,
                                     FloatPointer extraParams,
                                     FloatPointer result,
                                     IntPointer resultShapeInfo,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                     FloatBuffer x,
                                     IntBuffer xShapeInfo,
                                     FloatBuffer extraParams,
                                     FloatBuffer result,
                                     IntBuffer resultShapeInfo,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                     float[] x,
                                     int[] xShapeInfo,
                                     float[] extraParams,
                                     float[] result,
                                     int[] resultShapeInfo,@Cast("bool") boolean biasCorrected);


    public native void execSummaryStatsHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                     @Cast("float16*") ShortPointer x,
                                     IntPointer xShapeInfo,
                                     @Cast("float16*") ShortPointer extraParams,
                                     @Cast("float16*") ShortPointer result,
                                     IntPointer resultShapeInfo,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                     @Cast("float16*") ShortBuffer x,
                                     IntBuffer xShapeInfo,
                                     @Cast("float16*") ShortBuffer extraParams,
                                     @Cast("float16*") ShortBuffer result,
                                     IntBuffer resultShapeInfo,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                     @Cast("float16*") short[] x,
                                     int[] xShapeInfo,
                                     @Cast("float16*") short[] extraParams,
                                     @Cast("float16*") short[] result,
                                     int[] resultShapeInfo,@Cast("bool") boolean biasCorrected);

    /**
     *
     * @param opNum
     * @param x
     * @param xShapeInfo
     * @param extraParams
     * @param result
     * @param resultShapeInfoBuffer
     * @param dimension
     * @param dimensionLength
     */
    public native void execSummaryStatsFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,FloatPointer x,
                                     IntPointer xShapeInfo,
                                     FloatPointer extraParams,
                                     FloatPointer result,
                                     IntPointer resultShapeInfoBuffer,
                                     IntPointer dimension, int dimensionLength,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,FloatBuffer x,
                                     IntBuffer xShapeInfo,
                                     FloatBuffer extraParams,
                                     FloatBuffer result,
                                     IntBuffer resultShapeInfoBuffer,
                                     IntBuffer dimension, int dimensionLength,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,float[] x,
                                     int[] xShapeInfo,
                                     float[] extraParams,
                                     float[] result,
                                     int[] resultShapeInfoBuffer,
                                     int[] dimension, int dimensionLength,@Cast("bool") boolean biasCorrected);


    public native void execSummaryStatsHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,@Cast("float16*") ShortPointer x,
                                     IntPointer xShapeInfo,
                                     @Cast("float16*") ShortPointer extraParams,
                                     @Cast("float16*") ShortPointer result,
                                     IntPointer resultShapeInfoBuffer,
                                     IntPointer dimension, int dimensionLength,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,@Cast("float16*") ShortBuffer x,
                                     IntBuffer xShapeInfo,
                                     @Cast("float16*") ShortBuffer extraParams,
                                     @Cast("float16*") ShortBuffer result,
                                     IntBuffer resultShapeInfoBuffer,
                                     IntBuffer dimension, int dimensionLength,@Cast("bool") boolean biasCorrected);
    public native void execSummaryStatsHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,@Cast("float16*") short[] x,
                                     int[] xShapeInfo,
                                     @Cast("float16*") short[] extraParams,
                                     @Cast("float16*") short[] result,
                                     int[] resultShapeInfoBuffer,
                                     int[] dimension, int dimensionLength,@Cast("bool") boolean biasCorrected);

    /**
     *
     * @param opNum
     * @param dx
     * @param xStride
     * @param result
     * @param resultStride
     * @param extraParams
     * @param n
     */
    public native void execTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  FloatPointer dx,
                                  int xStride,
                                  FloatPointer result,
                                  int resultStride,
                                  FloatPointer extraParams, @Cast("Nd4jIndex") long n);
    public native void execTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  FloatBuffer dx,
                                  int xStride,
                                  FloatBuffer result,
                                  int resultStride,
                                  FloatBuffer extraParams, @Cast("Nd4jIndex") long n);
    public native void execTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  float[] dx,
                                  int xStride,
                                  float[] result,
                                  int resultStride,
                                  float[] extraParams, @Cast("Nd4jIndex") long n);


    public native void execTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  @Cast("float16*") ShortPointer dx,
                                  int xStride,
                                  @Cast("float16*") ShortPointer result,
                                  int resultStride,
                                  @Cast("float16*") ShortPointer extraParams, @Cast("Nd4jIndex") long n);
    public native void execTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  @Cast("float16*") ShortBuffer dx,
                                  int xStride,
                                  @Cast("float16*") ShortBuffer result,
                                  int resultStride,
                                  @Cast("float16*") ShortBuffer extraParams, @Cast("Nd4jIndex") long n);
    public native void execTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  @Cast("float16*") short[] dx,
                                  int xStride,
                                  @Cast("float16*") short[] result,
                                  int resultStride,
                                  @Cast("float16*") short[] extraParams, @Cast("Nd4jIndex") long n);

    /**
     *
     * @param opNum
     * @param dx
     * @param xShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param extraParams
     * @param n
     */
    public native void execTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  FloatPointer dx,
                                  IntPointer xShapeInfo,
                                  FloatPointer result,
                                  IntPointer resultShapeInfo,
                                  FloatPointer extraParams);
    public native void execTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  FloatBuffer dx,
                                  IntBuffer xShapeInfo,
                                  FloatBuffer result,
                                  IntBuffer resultShapeInfo,
                                  FloatBuffer extraParams);
    public native void execTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  float[] dx,
                                  int[] xShapeInfo,
                                  float[] result,
                                  int[] resultShapeInfo,
                                  float[] extraParams);

    public native void execTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  @Cast("float16*") ShortPointer dx,
                                  IntPointer xShapeInfo,
                                  @Cast("float16*") ShortPointer result,
                                  IntPointer resultShapeInfo,
                                  @Cast("float16*") ShortPointer extraParams);
    public native void execTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  @Cast("float16*") ShortBuffer dx,
                                  IntBuffer xShapeInfo,
                                  @Cast("float16*") ShortBuffer result,
                                  IntBuffer resultShapeInfo,
                                  @Cast("float16*") ShortBuffer extraParams);
    public native void execTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  @Cast("float16*") short[] dx,
                                  int[] xShapeInfo,
                                  @Cast("float16*") short[] result,
                                  int[] resultShapeInfo,
                                  @Cast("float16*") short[] extraParams);

    /**
     *
     * @param opNum
     * @param dx
     * @param xShapeInfo
     * @param result
     * @param resultShapeInfo
     * @param extraParams
     * @param n
     */
    public native void execTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  FloatPointer dx,
                                  IntPointer xShapeInfo,
                                  FloatPointer result,
                                  IntPointer resultShapeInfo,
                                  FloatPointer extraParams,
                                  IntPointer xIndexes,
                                  IntPointer resultIndexes);
    public native void execTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  FloatBuffer dx,
                                  IntBuffer xShapeInfo,
                                  FloatBuffer result,
                                  IntBuffer resultShapeInfo,
                                  FloatBuffer extraParams,
                                  IntBuffer xIndexes,
                                  IntBuffer resultIndexes);
    public native void execTransformFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  float[] dx,
                                  int[] xShapeInfo,
                                  float[] result,
                                  int[] resultShapeInfo,
                                  float[] extraParams,
                                  int[] xIndexes,
                                  int[] resultIndexes);

    public native void execTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  @Cast("float16*") ShortPointer dx,
                                  IntPointer xShapeInfo,
                                  @Cast("float16*") ShortPointer result,
                                  IntPointer resultShapeInfo,
                                  @Cast("float16*") ShortPointer extraParams,
                                  IntPointer xIndexes,
                                  IntPointer resultIndexes);
    public native void execTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  @Cast("float16*") ShortBuffer dx,
                                  IntBuffer xShapeInfo,
                                  @Cast("float16*") ShortBuffer result,
                                  IntBuffer resultShapeInfo,
                                  @Cast("float16*") ShortBuffer extraParams,
                                  IntBuffer xIndexes,
                                  IntBuffer resultIndexes);
    public native void execTransformHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum,
                                  @Cast("float16*") short[] dx,
                                  int[] xShapeInfo,
                                  @Cast("float16*") short[] result,
                                  int[] resultShapeInfo,
                                  @Cast("float16*") short[] extraParams,
                                  int[] xIndexes,
                                  int[] resultIndexes);


    /**
* Append an input array
* to the end of a flat array
* in a particular order
* @param offset the offset of the array to start at
* @param order the order
* @param result the result array
* @param resultShapeInfo the shape info for te array
* @param input the input for the array
* @param inputShapeInfo the shape information for that array
*/
    public native void flattenFloat(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int offset,
                char order,
                FloatPointer result,
                IntPointer resultShapeInfo,
                FloatPointer input,
                IntPointer inputShapeInfo);
    public native void flattenFloat(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int offset,
                char order,
                FloatBuffer result,
                IntBuffer resultShapeInfo,
                FloatBuffer input,
                IntBuffer inputShapeInfo);
    public native void flattenFloat(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int offset,
                char order,
                float[] result,
                int[] resultShapeInfo,
                float[] input,
                int[] inputShapeInfo);


    public native void flattenHalf(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int offset,
                char order,
                @Cast("float16*") ShortPointer result,
                IntPointer resultShapeInfo,
                @Cast("float16*") ShortPointer input,
                IntPointer inputShapeInfo);
    public native void flattenHalf(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int offset,
                char order,
                @Cast("float16*") ShortBuffer result,
                IntBuffer resultShapeInfo,
                @Cast("float16*") ShortBuffer input,
                IntBuffer inputShapeInfo);
    public native void flattenHalf(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int offset,
                char order,
                @Cast("float16*") short[] result,
                int[] resultShapeInfo,
                @Cast("float16*") short[] input,
                int[] inputShapeInfo);

    /**
* Append an input array
* to the end of a flat array
* in a particular order
* @param offset the offset of the array to start at
* @param order the order
* @param result the result array
* @param resultShapeInfo the shape info for te array
* @param input the input for the array
* @param inputShapeInfo the shape information for that array
*/
    public native void flattenDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int offset,
                char order,
                DoublePointer result,
                IntPointer resultShapeInfo,
                DoublePointer input,
                IntPointer inputShapeInfo);
    public native void flattenDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int offset,
                char order,
                DoubleBuffer result,
                IntBuffer resultShapeInfo,
                DoubleBuffer input,
                IntBuffer inputShapeInfo);
    public native void flattenDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int offset,
                char order,
                double[] result,
                int[] resultShapeInfo,
                double[] input,
                int[] inputShapeInfo);

   /**
    * Concatneate multi array of the same shape together
    * along a particular dimension
    */
    public native void concatFloat(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int dimension,
                int numArrays,
                @Cast("Nd4jPointer*") PointerPointer data,
                @Cast("Nd4jPointer*") PointerPointer inputShapeInfo,
                FloatPointer result,
                IntPointer resultShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadPointers, @Cast("Nd4jPointer*") PointerPointer offsetPointers);
    public native void concatFloat(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int dimension,
                int numArrays,
                @Cast("Nd4jPointer*") PointerPointer data,
                @Cast("Nd4jPointer*") PointerPointer inputShapeInfo,
                FloatBuffer result,
                IntBuffer resultShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadPointers, @Cast("Nd4jPointer*") PointerPointer offsetPointers);
    public native void concatFloat(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int dimension,
                int numArrays,
                @Cast("Nd4jPointer*") PointerPointer data,
                @Cast("Nd4jPointer*") PointerPointer inputShapeInfo,
                float[] result,
                int[] resultShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadPointers, @Cast("Nd4jPointer*") PointerPointer offsetPointers);
/**
    * Concatneate multi array of the same shape together
    * along a particular dimension
    */
    public native void concatDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int dimension,
                int numArrays,
                @Cast("Nd4jPointer*") PointerPointer data,
                @Cast("Nd4jPointer*") PointerPointer inputShapeInfo,
                DoublePointer result,
                IntPointer resultShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadPointers, @Cast("Nd4jPointer*") PointerPointer offsetPointers);
    public native void concatDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int dimension,
                int numArrays,
                @Cast("Nd4jPointer*") PointerPointer data,
                @Cast("Nd4jPointer*") PointerPointer inputShapeInfo,
                DoubleBuffer result,
                IntBuffer resultShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadPointers, @Cast("Nd4jPointer*") PointerPointer offsetPointers);
    public native void concatDouble(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int dimension,
                int numArrays,
                @Cast("Nd4jPointer*") PointerPointer data,
                @Cast("Nd4jPointer*") PointerPointer inputShapeInfo,
                double[] result,
                int[] resultShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadPointers, @Cast("Nd4jPointer*") PointerPointer offsetPointers);

    public native void concatHalf(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int dimension,
                int numArrays,
                @Cast("Nd4jPointer*") PointerPointer data,
                @Cast("Nd4jPointer*") PointerPointer inputShapeInfo,
                @Cast("float16*") ShortPointer result,
                IntPointer resultShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadPointers, @Cast("Nd4jPointer*") PointerPointer offsetPointers);
    public native void concatHalf(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int dimension,
                int numArrays,
                @Cast("Nd4jPointer*") PointerPointer data,
                @Cast("Nd4jPointer*") PointerPointer inputShapeInfo,
                @Cast("float16*") ShortBuffer result,
                IntBuffer resultShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadPointers, @Cast("Nd4jPointer*") PointerPointer offsetPointers);
    public native void concatHalf(
                @Cast("Nd4jPointer*") PointerPointer extraPointers,
                int dimension,
                int numArrays,
                @Cast("Nd4jPointer*") PointerPointer data,
                @Cast("Nd4jPointer*") PointerPointer inputShapeInfo,
                @Cast("float16*") short[] result,
                int[] resultShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadPointers, @Cast("Nd4jPointer*") PointerPointer offsetPointers);

    /**
     * This method implementation exists only for cuda.
     * The other backends should have dummy method for JNI compatibility reasons.
     */
    public native void initializeDevicesAndFunctions();


    /**
     * This method acquires memory chunk of requested size on host side
     *
     * @param pointer pointer that'll be used for allocation
     * @param memorySize memory size, in bytes
     * @param flags optional parameter
     */
    public native @Cast("Nd4jPointer") Pointer mallocHost(@Cast("Nd4jIndex") long memorySize, int flags);

    /**
     * This method acquires memory chunk of requested size on specified device
     *
     * @param pointer pointer that'll be used for allocation
     * @param memorySize memory size, in bytes
     * @param ptrToDeviceId pointer to deviceId. For cuda that's just and int, for OpenCL that's pointer to device_id, etc
     * @param flags optional parameter
     */
    public native @Cast("Nd4jPointer") Pointer mallocDevice(@Cast("Nd4jIndex") long memorySize, @Cast("Nd4jPointer") Pointer ptrToDeviceId, int flags);

    /**
     * This method releases previously allocated host memory space
     *
     * @param pointer pointer that'll be freed
     */
    public native int freeHost(@Cast("Nd4jPointer") Pointer pointer);

    /**
     * This method releases previously allocated memory space on device
     *
     * @param pointer pointer that'll be freed
     * @param ptrToDeviceId pointer to deviceId.
     */
    public native int freeDevice(@Cast("Nd4jPointer") Pointer pointer, @Cast("Nd4jPointer") Pointer ptrToDeviceId);

    public native int ompGetMaxThreads();

    public native int ompGetNumThreads();

    public native void setOmpNumThreads(int threads);

    public native void setOmpMinThreads(int threads);



    public native @Cast("Nd4jPointer") Pointer createContext();

    public native @Cast("Nd4jPointer") Pointer createStream();

    public native @Cast("Nd4jPointer") Pointer createEvent();

    public native int registerEvent(@Cast("Nd4jPointer") Pointer event, @Cast("Nd4jPointer") Pointer stream);

    public native int destroyEvent(@Cast("Nd4jPointer") Pointer event);

    public native int setDevice(@Cast("Nd4jPointer") Pointer ptrToDeviceId);

    public native int getDevice();

    public native int streamSynchronize(@Cast("Nd4jPointer") Pointer stream);

    public native int eventSynchronize(@Cast("Nd4jPointer") Pointer event);

    public native @Cast("Nd4jIndex") long getDeviceFreeMemory(@Cast("Nd4jPointer") Pointer ptrToDeviceId);

    public native @Cast("Nd4jIndex") long getDeviceTotalMemory(@Cast("Nd4jPointer") Pointer ptrToDeviceId);

    public native int getDeviceMajor(@Cast("Nd4jPointer") Pointer ptrToDeviceId);

    public native int getDeviceMinor(@Cast("Nd4jPointer") Pointer ptrToDeviceId);

    public native String getDeviceName(@Cast("Nd4jPointer") Pointer ptrToDeviceId);

    public native int memcpy(@Cast("Nd4jPointer") Pointer dst, @Cast("Nd4jPointer") Pointer src, @Cast("Nd4jIndex") long size, int flags, @Cast("Nd4jPointer") Pointer reserved);

    public native int memcpyAsync(@Cast("Nd4jPointer") Pointer dst, @Cast("Nd4jPointer") Pointer src, @Cast("Nd4jIndex") long size, int flags, @Cast("Nd4jPointer") Pointer reserved);

    public native int memset(@Cast("Nd4jPointer") Pointer dst, int value, @Cast("Nd4jIndex") long size, int flags, @Cast("Nd4jPointer") Pointer reserved);

    public native int memsetAsync(@Cast("Nd4jPointer") Pointer dst, int value, @Cast("Nd4jIndex") long size, int flags, @Cast("Nd4jPointer") Pointer reserved);

    public native int memcpyConstantAsync(@Cast("Nd4jIndex") long dst, @Cast("Nd4jPointer") Pointer src, @Cast("Nd4jIndex") long size, int flags, @Cast("Nd4jPointer") Pointer reserved);

    public native @Cast("Nd4jPointer") Pointer getConstantSpace();

    public native int getAvailableDevices();

    public native void enableDebugMode(@Cast("bool") boolean reallyEnable);

    public native void enableVerboseMode(@Cast("bool") boolean reallyEnable);

    public native void setGridLimit(int gridSize);

    public native void tadOnlyShapeInfo(IntPointer xShapeInfo, IntPointer dimension, int dimensionLength, IntPointer targetBuffer, IntPointer offsetsBuffer);
    public native void tadOnlyShapeInfo(IntBuffer xShapeInfo, IntBuffer dimension, int dimensionLength, IntBuffer targetBuffer, IntBuffer offsetsBuffer);
    public native void tadOnlyShapeInfo(int[] xShapeInfo, int[] dimension, int dimensionLength, int[] targetBuffer, int[] offsetsBuffer);

    /*
     * PullRow special op
     */

    public native void pullRowsHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, @Cast("float16*") ShortPointer x, IntPointer xShapeInfo, @Cast("float16*") ShortPointer z, IntPointer zShapeInfo, int n, IntPointer indexes, IntPointer tadShapeInfo, IntPointer tadOffsets, IntPointer zTadShapeInfo, IntPointer zTadOffsets);
    public native void pullRowsHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, @Cast("float16*") ShortBuffer x, IntBuffer xShapeInfo, @Cast("float16*") ShortBuffer z, IntBuffer zShapeInfo, int n, IntBuffer indexes, IntBuffer tadShapeInfo, IntBuffer tadOffsets, IntBuffer zTadShapeInfo, IntBuffer zTadOffsets);
    public native void pullRowsHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, @Cast("float16*") short[] x, int[] xShapeInfo, @Cast("float16*") short[] z, int[] zShapeInfo, int n, int[] indexes, int[] tadShapeInfo, int[] tadOffsets, int[] zTadShapeInfo, int[] zTadOffsets);

    public native void pullRowsFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, FloatPointer x, IntPointer xShapeInfo, FloatPointer z, IntPointer zShapeInfo, int n, IntPointer indexes, IntPointer tadShapeInfo, IntPointer tadOffsets, IntPointer zTadShapeInfo, IntPointer zTadOffsets);
    public native void pullRowsFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, FloatBuffer x, IntBuffer xShapeInfo, FloatBuffer z, IntBuffer zShapeInfo, int n, IntBuffer indexes, IntBuffer tadShapeInfo, IntBuffer tadOffsets, IntBuffer zTadShapeInfo, IntBuffer zTadOffsets);
    public native void pullRowsFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, float[] x, int[] xShapeInfo, float[] z, int[] zShapeInfo, int n, int[] indexes, int[] tadShapeInfo, int[] tadOffsets, int[] zTadShapeInfo, int[] zTadOffsets);

    public native void pullRowsDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, DoublePointer x, IntPointer xShapeInfo, DoublePointer z, IntPointer zShapeInfo, int n, IntPointer indexes, IntPointer tadShapeInfo, IntPointer tadOffsets, IntPointer zTadShapeInfo, IntPointer zTadOffsets);
    public native void pullRowsDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, DoubleBuffer x, IntBuffer xShapeInfo, DoubleBuffer z, IntBuffer zShapeInfo, int n, IntBuffer indexes, IntBuffer tadShapeInfo, IntBuffer tadOffsets, IntBuffer zTadShapeInfo, IntBuffer zTadOffsets);
    public native void pullRowsDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, double[] x, int[] xShapeInfo, double[] z, int[] zShapeInfo, int n, int[] indexes, int[] tadShapeInfo, int[] tadOffsets, int[] zTadShapeInfo, int[] zTadOffsets);

    /**
     * Array averaging op
     */
    public native void averageHalf(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("float16*") ShortPointer dz, int n, @Cast("Nd4jIndex") long length, @Cast("bool") boolean propagate);
    public native void averageHalf(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("float16*") ShortBuffer dz, int n, @Cast("Nd4jIndex") long length, @Cast("bool") boolean propagate);
    public native void averageHalf(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("float16*") short[] dz, int n, @Cast("Nd4jIndex") long length, @Cast("bool") boolean propagate);

    public native void averageFloat(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, FloatPointer dz, int n, @Cast("Nd4jIndex") long length, @Cast("bool") boolean propagate);
    public native void averageFloat(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, FloatBuffer dz, int n, @Cast("Nd4jIndex") long length, @Cast("bool") boolean propagate);
    public native void averageFloat(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, float[] dz, int n, @Cast("Nd4jIndex") long length, @Cast("bool") boolean propagate);

    public native void averageDouble(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, DoublePointer dz, int n, @Cast("Nd4jIndex") long length, @Cast("bool") boolean propagate);
    public native void averageDouble(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, DoubleBuffer dz, int n, @Cast("Nd4jIndex") long length, @Cast("bool") boolean propagate);
    public native void averageDouble(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, double[] dz, int n, @Cast("Nd4jIndex") long length, @Cast("bool") boolean propagate);


    /**
     * P2P enabler
     */
    public native void enableP2P(@Cast("bool") boolean enable);

    public native void checkP2P();

    public native @Cast("bool") boolean isP2PAvailable();

    /**
     * Shuffle methods
     */

    public native void shuffleDouble(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("Nd4jPointer*") PointerPointer xShapeInfo, @Cast("Nd4jPointer*") PointerPointer dz, @Cast("Nd4jPointer*") PointerPointer zShapeInfo, int N, IntPointer shuffleMap, @Cast("Nd4jPointer*") PointerPointer tadShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadOffsets);
    public native void shuffleDouble(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("Nd4jPointer*") PointerPointer xShapeInfo, @Cast("Nd4jPointer*") PointerPointer dz, @Cast("Nd4jPointer*") PointerPointer zShapeInfo, int N, IntBuffer shuffleMap, @Cast("Nd4jPointer*") PointerPointer tadShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadOffsets);
    public native void shuffleDouble(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("Nd4jPointer*") PointerPointer xShapeInfo, @Cast("Nd4jPointer*") PointerPointer dz, @Cast("Nd4jPointer*") PointerPointer zShapeInfo, int N, int[] shuffleMap, @Cast("Nd4jPointer*") PointerPointer tadShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadOffsets);

    public native void shuffleFloat(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("Nd4jPointer*") PointerPointer xShapeInfo, @Cast("Nd4jPointer*") PointerPointer dz, @Cast("Nd4jPointer*") PointerPointer zShapeInfo, int N, IntPointer shuffleMap, @Cast("Nd4jPointer*") PointerPointer tadShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadOffsets);
    public native void shuffleFloat(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("Nd4jPointer*") PointerPointer xShapeInfo, @Cast("Nd4jPointer*") PointerPointer dz, @Cast("Nd4jPointer*") PointerPointer zShapeInfo, int N, IntBuffer shuffleMap, @Cast("Nd4jPointer*") PointerPointer tadShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadOffsets);
    public native void shuffleFloat(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("Nd4jPointer*") PointerPointer xShapeInfo, @Cast("Nd4jPointer*") PointerPointer dz, @Cast("Nd4jPointer*") PointerPointer zShapeInfo, int N, int[] shuffleMap, @Cast("Nd4jPointer*") PointerPointer tadShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadOffsets);

    public native void shuffleHalf(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("Nd4jPointer*") PointerPointer xShapeInfo, @Cast("Nd4jPointer*") PointerPointer dz, @Cast("Nd4jPointer*") PointerPointer zShapeInfo, int N, IntPointer shuffleMap, @Cast("Nd4jPointer*") PointerPointer tadShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadOffsets);
    public native void shuffleHalf(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("Nd4jPointer*") PointerPointer xShapeInfo, @Cast("Nd4jPointer*") PointerPointer dz, @Cast("Nd4jPointer*") PointerPointer zShapeInfo, int N, IntBuffer shuffleMap, @Cast("Nd4jPointer*") PointerPointer tadShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadOffsets);
    public native void shuffleHalf(@Cast("Nd4jPointer*") PointerPointer extras, @Cast("Nd4jPointer*") PointerPointer dx, @Cast("Nd4jPointer*") PointerPointer xShapeInfo, @Cast("Nd4jPointer*") PointerPointer dz, @Cast("Nd4jPointer*") PointerPointer zShapeInfo, int N, int[] shuffleMap, @Cast("Nd4jPointer*") PointerPointer tadShapeInfo, @Cast("Nd4jPointer*") PointerPointer tadOffsets);

    /**
     * Type Conversions
     */

    public native void convertTypes(@Cast("Nd4jPointer*") PointerPointer extras, int srcType, @Cast("Nd4jPointer") Pointer x, long N, int dstType, @Cast("Nd4jPointer") Pointer z);


    public native @Cast("bool") boolean isExperimentalEnabled();

    /**
     * Aggregate
     */
    public native void execAggregateFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @Cast("float**") PointerPointer arguments, int numArguments, @Cast("int**") PointerPointer shapeArguments, int numShapeArguments, IntPointer indexArguments, int numIndexArguments, @Cast("int**") PointerPointer intArrays, int numIntArrays, FloatPointer realArguments, int numRealArguments);
    public native void execAggregateFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @ByPtrPtr FloatPointer arguments, int numArguments, @ByPtrPtr IntPointer shapeArguments, int numShapeArguments, IntPointer indexArguments, int numIndexArguments, @ByPtrPtr IntPointer intArrays, int numIntArrays, FloatPointer realArguments, int numRealArguments);
    public native void execAggregateFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @ByPtrPtr FloatBuffer arguments, int numArguments, @ByPtrPtr IntBuffer shapeArguments, int numShapeArguments, IntBuffer indexArguments, int numIndexArguments, @ByPtrPtr IntBuffer intArrays, int numIntArrays, FloatBuffer realArguments, int numRealArguments);
    public native void execAggregateFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @ByPtrPtr float[] arguments, int numArguments, @ByPtrPtr int[] shapeArguments, int numShapeArguments, int[] indexArguments, int numIndexArguments, @ByPtrPtr int[] intArrays, int numIntArrays, float[] realArguments, int numRealArguments);

    public native void execAggregateDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @Cast("double**") PointerPointer arguments, int numArguments, @Cast("int**") PointerPointer shapeArguments, int numShapeArguments, IntPointer indexArguments, int numIndexArguments, @Cast("int**") PointerPointer intArrays, int numIntArrays, DoublePointer realArguments, int numRealArguments);
    public native void execAggregateDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @ByPtrPtr DoublePointer arguments, int numArguments, @ByPtrPtr IntPointer shapeArguments, int numShapeArguments, IntPointer indexArguments, int numIndexArguments, @ByPtrPtr IntPointer intArrays, int numIntArrays, DoublePointer realArguments, int numRealArguments);
    public native void execAggregateDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @ByPtrPtr DoubleBuffer arguments, int numArguments, @ByPtrPtr IntBuffer shapeArguments, int numShapeArguments, IntBuffer indexArguments, int numIndexArguments, @ByPtrPtr IntBuffer intArrays, int numIntArrays, DoubleBuffer realArguments, int numRealArguments);
    public native void execAggregateDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @ByPtrPtr double[] arguments, int numArguments, @ByPtrPtr int[] shapeArguments, int numShapeArguments, int[] indexArguments, int numIndexArguments, @ByPtrPtr int[] intArrays, int numIntArrays, double[] realArguments, int numRealArguments);

    public native void execAggregateHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @Cast("float16**") PointerPointer arguments, int numArguments, @Cast("int**") PointerPointer shapeArguments, int numShapeArguments, IntPointer indexArguments, int numIndexArguments, @Cast("int**") PointerPointer intArrays, int numIntArrays, @Cast("float16*") ShortPointer realArguments, int numRealArguments);
    public native void execAggregateHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @Cast("float16**") @ByPtrPtr ShortPointer arguments, int numArguments, @ByPtrPtr IntPointer shapeArguments, int numShapeArguments, IntPointer indexArguments, int numIndexArguments, @ByPtrPtr IntPointer intArrays, int numIntArrays, @Cast("float16*") ShortPointer realArguments, int numRealArguments);
    public native void execAggregateHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @Cast("float16**") @ByPtrPtr ShortBuffer arguments, int numArguments, @ByPtrPtr IntBuffer shapeArguments, int numShapeArguments, IntBuffer indexArguments, int numIndexArguments, @ByPtrPtr IntBuffer intArrays, int numIntArrays, @Cast("float16*") ShortBuffer realArguments, int numRealArguments);
    public native void execAggregateHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers,int opNum, @Cast("float16**") @ByPtrPtr short[] arguments, int numArguments, @ByPtrPtr int[] shapeArguments, int numShapeArguments, int[] indexArguments, int numIndexArguments, @ByPtrPtr int[] intArrays, int numIntArrays, @Cast("float16*") short[] realArguments, int numRealArguments);



    public native void execAggregateBatchFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, int numAggregates, int opNum, int maxArgs, int maxShapes, int maxIntArrays, int maxIntArraySize, int maxIdx, int maxReals, Pointer ptrToArguments);

    public native void execAggregateBatchDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, int numAggregates, int opNum, int maxArgs, int maxShapes, int maxIntArrays, int maxIntArraySize, int maxIdx, int maxReals, Pointer ptrToArguments);

    public native void execAggregateBatchHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, int numAggregates, int opNum, int maxArgs, int maxShapes, int maxIntArrays, int maxIntArraySize, int maxIdx, int maxReals, Pointer ptrToArguments);

    /**
     * Random operations
     */

    public native void execRandomFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, FloatPointer z, IntPointer zShapeBuffer, FloatPointer extraArguments);
    public native void execRandomFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, FloatBuffer z, IntBuffer zShapeBuffer, FloatBuffer extraArguments);
    public native void execRandomFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, float[] z, int[] zShapeBuffer, float[] extraArguments);

    public native void execRandomFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, FloatPointer x, IntPointer xShapeBuffer, FloatPointer y, IntPointer yShapeBuffer, FloatPointer z, IntPointer zShapeBuffer, FloatPointer extraArguments);
    public native void execRandomFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, FloatBuffer x, IntBuffer xShapeBuffer, FloatBuffer y, IntBuffer yShapeBuffer, FloatBuffer z, IntBuffer zShapeBuffer, FloatBuffer extraArguments);
    public native void execRandomFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, float[] x, int[] xShapeBuffer, float[] y, int[] yShapeBuffer, float[] z, int[] zShapeBuffer, float[] extraArguments);

    public native void execRandomFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, FloatPointer x, IntPointer xShapeBuffer, FloatPointer z, IntPointer zShapeBuffer, FloatPointer extraArguments);
    public native void execRandomFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, FloatBuffer x, IntBuffer xShapeBuffer, FloatBuffer z, IntBuffer zShapeBuffer, FloatBuffer extraArguments);
    public native void execRandomFloat(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, float[] x, int[] xShapeBuffer, float[] z, int[] zShapeBuffer, float[] extraArguments);


    public native void execRandomDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, DoublePointer z, IntPointer zShapeBuffer, DoublePointer extraArguments);
    public native void execRandomDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, DoubleBuffer z, IntBuffer zShapeBuffer, DoubleBuffer extraArguments);
    public native void execRandomDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, double[] z, int[] zShapeBuffer, double[] extraArguments);

    public native void execRandomDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, DoublePointer x, IntPointer xShapeBuffer, DoublePointer y, IntPointer yShapeBuffer, DoublePointer z, IntPointer zShapeBuffer, DoublePointer extraArguments);
    public native void execRandomDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, DoubleBuffer x, IntBuffer xShapeBuffer, DoubleBuffer y, IntBuffer yShapeBuffer, DoubleBuffer z, IntBuffer zShapeBuffer, DoubleBuffer extraArguments);
    public native void execRandomDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, double[] x, int[] xShapeBuffer, double[] y, int[] yShapeBuffer, double[] z, int[] zShapeBuffer, double[] extraArguments);

    public native void execRandomDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, DoublePointer x, IntPointer xShapeBuffer, DoublePointer z, IntPointer zShapeBuffer, DoublePointer extraArguments);
    public native void execRandomDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, DoubleBuffer x, IntBuffer xShapeBuffer, DoubleBuffer z, IntBuffer zShapeBuffer, DoubleBuffer extraArguments);
    public native void execRandomDouble(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, double[] x, int[] xShapeBuffer, double[] z, int[] zShapeBuffer, double[] extraArguments);


    public native void execRandomHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, @Cast("float16*") ShortPointer z, IntPointer zShapeBuffer, @Cast("float16*") ShortPointer extraArguments);
    public native void execRandomHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, @Cast("float16*") ShortBuffer z, IntBuffer zShapeBuffer, @Cast("float16*") ShortBuffer extraArguments);
    public native void execRandomHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, @Cast("float16*") short[] z, int[] zShapeBuffer, @Cast("float16*") short[] extraArguments);

    public native void execRandomHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, @Cast("float16*") ShortPointer x, IntPointer xShapeBuffer, @Cast("float16*") ShortPointer y, IntPointer yShapeBuffer, @Cast("float16*") ShortPointer z, IntPointer zShapeBuffer, @Cast("float16*") ShortPointer extraArguments);
    public native void execRandomHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, @Cast("float16*") ShortBuffer x, IntBuffer xShapeBuffer, @Cast("float16*") ShortBuffer y, IntBuffer yShapeBuffer, @Cast("float16*") ShortBuffer z, IntBuffer zShapeBuffer, @Cast("float16*") ShortBuffer extraArguments);
    public native void execRandomHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, @Cast("float16*") short[] x, int[] xShapeBuffer, @Cast("float16*") short[] y, int[] yShapeBuffer, @Cast("float16*") short[] z, int[] zShapeBuffer, @Cast("float16*") short[] extraArguments);

    public native void execRandomHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, @Cast("float16*") ShortPointer x, IntPointer xShapeBuffer, @Cast("float16*") ShortPointer z, IntPointer zShapeBuffer, @Cast("float16*") ShortPointer extraArguments);
    public native void execRandomHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, @Cast("float16*") ShortBuffer x, IntBuffer xShapeBuffer, @Cast("float16*") ShortBuffer z, IntBuffer zShapeBuffer, @Cast("float16*") ShortBuffer extraArguments);
    public native void execRandomHalf(@Cast("Nd4jPointer*") PointerPointer extraPointers, int opNum, @Cast("Nd4jPointer") Pointer state, @Cast("float16*") short[] x, int[] xShapeBuffer, @Cast("float16*") short[] z, int[] zShapeBuffer, @Cast("float16*") short[] extraArguments);



    public native @Cast("Nd4jPointer") Pointer initRandom(@Cast("Nd4jPointer*") PointerPointer extraPointers, long seed, long bufferSize, @Cast("Nd4jPointer") Pointer ptrToBuffer);

    public native void refreshBuffer(@Cast("Nd4jPointer*") PointerPointer extraPointers, long seed, @Cast("Nd4jPointer") Pointer ptrRandom);

    public native void reSeedBuffer(@Cast("Nd4jPointer*") PointerPointer extraPointers, long seed, @Cast("Nd4jPointer") Pointer ptrRandom);

    public native void destroyRandom(@Cast("Nd4jPointer") Pointer ptrRandom);

    /**
     * Grid operations
     */

    public native void execMetaPredicateStridedFloat(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, FloatPointer dx, int xStride, FloatPointer dy, int yStride, FloatPointer dz, int zStride, FloatPointer extraA, FloatPointer extraB, float scalarA, float scalarB);
    public native void execMetaPredicateStridedFloat(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, FloatBuffer dx, int xStride, FloatBuffer dy, int yStride, FloatBuffer dz, int zStride, FloatBuffer extraA, FloatBuffer extraB, float scalarA, float scalarB);
    public native void execMetaPredicateStridedFloat(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, float[] dx, int xStride, float[] dy, int yStride, float[] dz, int zStride, float[] extraA, float[] extraB, float scalarA, float scalarB);

    public native void execMetaPredicateShapeFloat(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, FloatPointer dx, IntPointer xShapeInfo, FloatPointer dy, IntPointer yShapeInfo, FloatPointer dz, IntPointer zShapeInfo, FloatPointer extraA, FloatPointer extraB, float scalarA, float scalarB);
    public native void execMetaPredicateShapeFloat(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, FloatBuffer dx, IntBuffer xShapeInfo, FloatBuffer dy, IntBuffer yShapeInfo, FloatBuffer dz, IntBuffer zShapeInfo, FloatBuffer extraA, FloatBuffer extraB, float scalarA, float scalarB);
    public native void execMetaPredicateShapeFloat(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, float[] dx, int[] xShapeInfo, float[] dy, int[] yShapeInfo, float[] dz, int[] zShapeInfo, float[] extraA, float[] extraB, float scalarA, float scalarB);

    public native void execMetaPredicateStridedDouble(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, DoublePointer dx, int xStride, DoublePointer dy, int yStride, DoublePointer dz, int zStride, DoublePointer extraA, DoublePointer extraB, double scalarA, double scalarB);
    public native void execMetaPredicateStridedDouble(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, DoubleBuffer dx, int xStride, DoubleBuffer dy, int yStride, DoubleBuffer dz, int zStride, DoubleBuffer extraA, DoubleBuffer extraB, double scalarA, double scalarB);
    public native void execMetaPredicateStridedDouble(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, double[] dx, int xStride, double[] dy, int yStride, double[] dz, int zStride, double[] extraA, double[] extraB, double scalarA, double scalarB);

    public native void execMetaPredicateShapeDouble(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, DoublePointer dx, IntPointer xShapeInfo, DoublePointer dy, IntPointer yShapeInfo, DoublePointer dz, IntPointer zShapeInfo, DoublePointer extraA, DoublePointer extraB, double scalarA, double scalarB);
    public native void execMetaPredicateShapeDouble(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, DoubleBuffer dx, IntBuffer xShapeInfo, DoubleBuffer dy, IntBuffer yShapeInfo, DoubleBuffer dz, IntBuffer zShapeInfo, DoubleBuffer extraA, DoubleBuffer extraB, double scalarA, double scalarB);
    public native void execMetaPredicateShapeDouble(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, double[] dx, int[] xShapeInfo, double[] dy, int[] yShapeInfo, double[] dz, int[] zShapeInfo, double[] extraA, double[] extraB, double scalarA, double scalarB);

    public native void execMetaPredicateStridedHalf(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, @Cast("float16*") ShortPointer dx, int xStride, @Cast("float16*") ShortPointer dy, int yStride, @Cast("float16*") ShortPointer dz, int zStride, @Cast("float16*") ShortPointer extraA, @Cast("float16*") ShortPointer extraB, float scalarA, float scalarB);
    public native void execMetaPredicateStridedHalf(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, @Cast("float16*") ShortBuffer dx, int xStride, @Cast("float16*") ShortBuffer dy, int yStride, @Cast("float16*") ShortBuffer dz, int zStride, @Cast("float16*") ShortBuffer extraA, @Cast("float16*") ShortBuffer extraB, float scalarA, float scalarB);
    public native void execMetaPredicateStridedHalf(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, @Cast("float16*") short[] dx, int xStride, @Cast("float16*") short[] dy, int yStride, @Cast("float16*") short[] dz, int zStride, @Cast("float16*") short[] extraA, @Cast("float16*") short[] extraB, float scalarA, float scalarB);

    public native void execMetaPredicateShapeHalf(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, @Cast("float16*") ShortPointer dx, IntPointer xShapeInfo, @Cast("float16*") ShortPointer dy, IntPointer yShapeInfo, @Cast("float16*") ShortPointer dz, IntPointer zShapeInfo, @Cast("float16*") ShortPointer extraA, @Cast("float16*") ShortPointer extraB, float scalarA, float scalarB);
    public native void execMetaPredicateShapeHalf(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, @Cast("float16*") ShortBuffer dx, IntBuffer xShapeInfo, @Cast("float16*") ShortBuffer dy, IntBuffer yShapeInfo, @Cast("float16*") ShortBuffer dz, IntBuffer zShapeInfo, @Cast("float16*") ShortBuffer extraA, @Cast("float16*") ShortBuffer extraB, float scalarA, float scalarB);
    public native void execMetaPredicateShapeHalf(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, long N, @Cast("float16*") short[] dx, int[] xShapeInfo, @Cast("float16*") short[] dy, int[] yShapeInfo, @Cast("float16*") short[] dz, int[] zShapeInfo, @Cast("float16*") short[] extraA, @Cast("float16*") short[] extraB, float scalarA, float scalarB);


    public native void execMetaPredicateReduceFloat(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, FloatPointer dx, IntPointer xShapeInfo, FloatPointer dy, IntPointer yShapeInfo, FloatPointer dz, IntPointer zShapeInfo, IntPointer dimension, int dimensionLength, IntPointer tadShapeInfo, IntPointer tadOffsets, FloatPointer extraA, FloatPointer extraB, float scalarA, float scalarB, @Cast("bool") boolean scalarReturned);
    public native void execMetaPredicateReduceFloat(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, FloatBuffer dx, IntBuffer xShapeInfo, FloatBuffer dy, IntBuffer yShapeInfo, FloatBuffer dz, IntBuffer zShapeInfo, IntBuffer dimension, int dimensionLength, IntBuffer tadShapeInfo, IntBuffer tadOffsets, FloatBuffer extraA, FloatBuffer extraB, float scalarA, float scalarB, @Cast("bool") boolean scalarReturned);
    public native void execMetaPredicateReduceFloat(@Cast("Nd4jPointer*") PointerPointer extras, int opTypeA, int opNumA, int opTypeB, int opNumB, float[] dx, int[] xShapeInfo, float[] dy, int[] yShapeInfo, float[] dz, int[] zShapeInfo, int[] dimension, int dimensionLength, int[] tadShapeInfo, int[] tadOffsets, float[] extraA, float[] extraB, float scalarA, float scalarB, @Cast("bool") boolean scalarReturned);
}


// #endif //NATIVEOPERATIONS_NATIVEOPS_H


}
